env:
  global:
    - T2D_WITHOUT_AUDIO=true
    - T2D_WITHOUT_GRAPHICS=true

git:
  depth: false
  quiet: true

language: cpp

jobs:
  include:

    #
    # android (linux)
    #

    - os: linux
      dist: xenial
      stage: android
      name: debug, linux
      script: .ci/builds/build_android_debug.sh

    - os: linux
      dist: xenial
      stage: android
      name: release, linux
      script: .ci/builds/build_android_release.sh

    #
    # linux (g++-7)
    #

    - os: linux
      dist: xenial
      stage: linux
      name: debug, g++-7
      addons: { apt: { sources: ["ubuntu-toolchain-r-test"], packages: ["libx11-dev", "libgl1-mesa-dev", "xorg-dev", "g++-7"] } }
      env: CC=gcc-7 CXX=g++-7
      script: .ci/builds/build_linux_debug.sh

    - os: linux
      dist: xenial
      stage: linux
      name: release, g++-7
      addons: { apt: { sources: ["ubuntu-toolchain-r-test"], packages: ["libx11-dev", "libgl1-mesa-dev", "xorg-dev", "g++-7"] } }
      env: CC=gcc-7 CXX=g++-7
      script: .ci/builds/build_linux_release.sh

    #
    # linux (g++-8)
    #

    - os: linux
      dist: xenial
      stage: linux
      name: debug, g++-8
      addons: { apt: { sources: ["ubuntu-toolchain-r-test"], packages: ["libx11-dev", "libgl1-mesa-dev", "xorg-dev", "g++-8"] } }
      env: CC=gcc-8 CXX=g++-8
      script: .ci/builds/build_linux_debug.sh

    - os: linux
      dist: xenial
      stage: linux
      name: release, g++-8
      addons: { apt: { sources: ["ubuntu-toolchain-r-test"], packages: ["libx11-dev", "libgl1-mesa-dev", "xorg-dev", "g++-8"] } }
      env: CC=gcc-8 CXX=g++-8
      script: .ci/builds/build_linux_release.sh

    #
    # linux (clang++-5.0)
    #

    - os: linux
      dist: xenial
      stage: linux
      name: debug, clang++-5.0
      addons: { apt: { sources: ["ubuntu-toolchain-r-test"], packages: ["libx11-dev", "libgl1-mesa-dev", "xorg-dev", "g++-7", "clang-5.0"] } }
      env: CC=clang-5.0 CXX=clang++-5.0
      script: .ci/builds/build_linux_debug.sh

    - os: linux
      dist: xenial
      stage: linux
      name: release, clang++-5.0
      addons: { apt: { sources: ["ubuntu-toolchain-r-test"], packages: ["libx11-dev", "libgl1-mesa-dev", "xorg-dev", "g++-7", "clang-5.0"] } }
      env: CC=clang-5.0 CXX=clang++-5.0
      script: .ci/builds/build_linux_release.sh

    #
    # linux (clang++-6.0)
    #

    - os: linux
      dist: xenial
      stage: linux
      name: debug, clang++-6.0
      addons: { apt: { sources: ["ubuntu-toolchain-r-test"], packages: ["libx11-dev", "libgl1-mesa-dev", "xorg-dev", "g++-7", "clang-6.0"] } }
      env: CC=clang-6.0 CXX=clang++-6.0
      script: .ci/builds/build_linux_debug.sh

    - os: linux
      dist: xenial
      stage: linux
      name: release, clang++-6.0
      addons: { apt: { sources: ["ubuntu-toolchain-r-test"], packages: ["libx11-dev", "libgl1-mesa-dev", "xorg-dev", "g++-7", "clang-6.0"] } }
      env: CC=clang-6.0 CXX=clang++-6.0
      script: .ci/builds/build_linux_release.sh

    #
    # darwin (xcode11)
    #

    - os: osx
      osx_image: xcode11
      stage: darwin
      name: debug, xcode11
      script: .ci/builds/build_darwin_debug.sh

    - os: osx
      osx_image: xcode11
      stage: darwin
      name: release, xcode11
      script: .ci/builds/build_darwin_release.sh

    #
    # darwin (xcode12)
    #

    - os: osx
      osx_image: xcode12
      stage: darwin
      name: debug, xcode12
      script: .ci/builds/build_darwin_debug.sh

    - os: osx
      osx_image: xcode12
      stage: darwin
      name: release, xcode12
      script: .ci/builds/build_darwin_release.sh

before_install:
  - if [ "${TRAVIS_OS_NAME}" == 'linux' ]; then
    mkdir ${HOME}/cmake;
    export PATH="${HOME}/cmake/bin:${PATH}";
    travis_retry wget -q "https://cmake.org/files/v3.13/cmake-3.13.0-Linux-x86_64.sh";
    sh cmake-3.13.0-Linux-x86_64.sh --prefix=${HOME}/cmake --exclude-subdir --skip-license;
    echo "cmake.dir=${HOME}/cmake" >> "sample/gradle/local.properties";
    fi
