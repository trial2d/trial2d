git:
  depth: false
  quiet: true

language: cpp

jobs:
  include:

    #
    # ios
    #

    - os: osx
      osx_image: xcode11
      stage: ios
      name: xcode11
      script: .ci/builds/build_ios_simulator_release.sh

    - os: osx
      osx_image: xcode12
      stage: ios
      name: xcode12
      script: .ci/builds/build_ios_simulator_release.sh

    #
    # android
    #

    - os: linux
      dist: bionic
      stage: android
      name: linux
      addons: { apt: { sources: ["ubuntu-toolchain-r-test"], packages: ["ninja-build"] } }
      script: .ci/builds/build_android_release.sh

    - os: osx
      osx_image: xcode12
      stage: android
      name: darwin
      script: .ci/builds/build_android_release.sh

    #
    # emscripten (asmjs)
    #

    - os: linux
      dist: bionic
      stage: emscripten
      name: asmjs, linux
      script: .ci/builds/build_asmjs_release.sh

    - os: osx
      osx_image: xcode12
      stage: emscripten
      name: asmjs, darwin
      script: .ci/builds/build_asmjs_release.sh

    #
    # emscripten (wasm)
    #

    - os: linux
      dist: bionic
      stage: emscripten
      name: wasm, linux
      script: .ci/builds/build_wasm_release.sh

    - os: osx
      osx_image: xcode12
      stage: emscripten
      name: wasm, darwin
      script: .ci/builds/build_wasm_release.sh

    #
    # linux (g++)
    #

    - os: linux
      dist: bionic
      stage: linux
      name: g++-7
      addons: { apt: { sources: ["ubuntu-toolchain-r-test"], packages: ["libx11-dev", "libgl1-mesa-dev", "xorg-dev", "g++-7"] } }
      env: CC=gcc-7 CXX=g++-7
      script: .ci/builds/build_linux_release.sh

    - os: linux
      dist: bionic
      stage: linux
      name: g++-8
      addons: { apt: { sources: ["ubuntu-toolchain-r-test"], packages: ["libx11-dev", "libgl1-mesa-dev", "xorg-dev", "g++-8"] } }
      env: CC=gcc-8 CXX=g++-8
      script: .ci/builds/build_linux_release.sh

    #
    # linux (clang++)
    #

    - os: linux
      dist: bionic
      stage: linux
      name: clang++-5.0
      addons: { apt: { sources: ["ubuntu-toolchain-r-test"], packages: ["libx11-dev", "libgl1-mesa-dev", "xorg-dev", "clang-5.0"] } }
      env: CC=clang-5.0 CXX=clang++-5.0
      script: .ci/builds/build_linux_release.sh

    - os: linux
      dist: bionic
      stage: linux
      name: clang++-6.0
      addons: { apt: { sources: ["ubuntu-toolchain-r-test"], packages: ["libx11-dev", "libgl1-mesa-dev", "xorg-dev", "clang-6.0"] } }
      env: CC=clang-6.0 CXX=clang++-6.0
      script: .ci/builds/build_linux_release.sh

    #
    # darwin
    #

    - os: osx
      osx_image: xcode11
      stage: darwin
      name: xcode11
      script: .ci/builds/build_darwin_release.sh

    - os: osx
      osx_image: xcode12
      stage: darwin
      name: xcode12
      script: .ci/builds/build_darwin_release.sh
